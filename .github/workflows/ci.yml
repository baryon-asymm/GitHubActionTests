name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build for .NET 8 and 9
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Устанавливаем обе версии .NET
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Setup .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    # Собираем для .NET 8
    - name: Build for .NET 8
      run: |
        dotnet restore --runtime linux-x64
        dotnet build --configuration Release --runtime linux-x64 -p:TargetFramework=net8.0
        dotnet test --configuration Release --no-build --verbosity normal -p:TargetFramework=net8.0
        dotnet pack --configuration Release --no-build -p:TargetFramework=net8.0 -p:PackageOutputPath=./artifacts-net8
    
    # Собираем для .NET 9
    - name: Build for .NET 9
      run: |
        dotnet restore --runtime linux-x64
        dotnet build --configuration Release --runtime linux-x64 -p:TargetFramework=net9.0
        dotnet test --configuration Release --no-build --verbosity normal -p:TargetFramework=net9.0
        dotnet pack --configuration Release --no-build -p:TargetFramework=net9.0 -p:PackageOutputPath=./artifacts-net9
    
    # Объединяем артефакты
    - name: Combine artifacts
      run: |
        mkdir -p ./artifacts
        cp ./artifacts-net8/*.nupkg ./artifacts/
        cp ./artifacts-net9/*.nupkg ./artifacts/
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

  publish:
    name: Publish NuGet and Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Publish to NuGet
      run: |
        dotnet nuget push ./artifacts/**/*.nupkg \
          --skip-duplicate \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json
    
    - name: Get release notes from last commit
      id: last-commit
      run: |
        MESSAGE=$(git log -1 --pretty=%B)
        echo "message=$MESSAGE" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: ${{ github.ref_name }}
        body: ${{ steps.last-commit.outputs.message }}
        files: ./artifacts/**/*