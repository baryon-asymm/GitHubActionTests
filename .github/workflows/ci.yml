name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: ['8.0.x', '9.0.x']
  NUGET_PACKAGE_NAME: JustConsoleApp

jobs:
  build:
    name: Build for .NET ${{ matrix.dotnet }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: ${{ env.DOTNET_VERSION }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET ${{ matrix.dotnet }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
    
    - name: Pack
      run: dotnet pack --configuration Release --no-build --output ./artifacts
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages-${{ matrix.dotnet }}
        path: ./artifacts/*.nupkg
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

  publish:
    name: Publish NuGet and Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Publish to NuGet
      run: |
        dotnet nuget push ./artifacts/**/*.nupkg \
          --skip-duplicate \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json
    
    - name: Get release notes from last commit
      id: last-commit
      run: |
        MESSAGE=$(git log -1 --pretty=%B)
        echo "message=$MESSAGE" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: ${{ github.ref_name }}
        body: ${{ steps.last-commit.outputs.message }}
        files: ./artifacts/**/*
